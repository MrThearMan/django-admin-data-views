name: Test

on:
  push:
    branches:
      - main
    paths:
      - "**.py"
      - "pyproject.toml"
      - "poetry.lock"

env:
  POETRY_VIRTUALENVS_IN_PROJECT: true
  POETRY_NO_INTERACTION: 1
  DJANGO_SETTINGS_MODULE: tests.django.settings
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  COVERALLS_PARALLEL: true

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: ["3.8", "3.9", "3.10", "3.11.0b1 - 3.11"]

    env:
      COVERALLS_FLAG_NAME: python${{ matrix.python-version }}-${{ matrix.os }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: "1.1.13"

      - name: Load cached venv
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: |
            .venv
            .tox
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-tox-v1

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: Install project
        run: poetry install

      - name: Run tox
        run: poetry run tox

      - name: Submit coverage
        run: poetry run coveralls --service=github

  submit-coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Set up poetry
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: "1.1.13"

      - name: Load cached venv
        id: cache-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-cov-v1

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: Install project
        run: poetry install

      - name: Finnish coverage report
        run: poetry run coveralls --service=github --finish
